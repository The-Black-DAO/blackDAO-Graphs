// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AuthorityUpdated extends ethereum.Event {
  get params(): AuthorityUpdated__Params {
    return new AuthorityUpdated__Params(this);
  }
}

export class AuthorityUpdated__Params {
  _event: AuthorityUpdated;

  constructor(event: AuthorityUpdated) {
    this._event = event;
  }

  get authority(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class CreateDebt extends ethereum.Event {
  get params(): CreateDebt__Params {
    return new CreateDebt__Params(this);
  }
}

export class CreateDebt__Params {
  _event: CreateDebt;

  constructor(event: CreateDebt) {
    this._event = event;
  }

  get debtor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Managed extends ethereum.Event {
  get params(): Managed__Params {
    return new Managed__Params(this);
  }
}

export class Managed__Params {
  _event: Managed;

  constructor(event: Managed) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Minted extends ethereum.Event {
  get params(): Minted__Params {
    return new Minted__Params(this);
  }
}

export class Minted__Params {
  _event: Minted;

  constructor(event: Minted) {
    this._event = event;
  }

  get caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class PermissionQueued extends ethereum.Event {
  get params(): PermissionQueued__Params {
    return new PermissionQueued__Params(this);
  }
}

export class PermissionQueued__Params {
  _event: PermissionQueued;

  constructor(event: PermissionQueued) {
    this._event = event;
  }

  get status(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get queued(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Permissioned extends ethereum.Event {
  get params(): Permissioned__Params {
    return new Permissioned__Params(this);
  }
}

export class Permissioned__Params {
  _event: Permissioned;

  constructor(event: Permissioned) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get status(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get result(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class RepayDebt extends ethereum.Event {
  get params(): RepayDebt__Params {
    return new RepayDebt__Params(this);
  }
}

export class RepayDebt__Params {
  _event: RepayDebt;

  constructor(event: RepayDebt) {
    this._event = event;
  }

  get debtor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ReservesAudited extends ethereum.Event {
  get params(): ReservesAudited__Params {
    return new ReservesAudited__Params(this);
  }
}

export class ReservesAudited__Params {
  _event: ReservesAudited;

  constructor(event: ReservesAudited) {
    this._event = event;
  }

  get totalReserves(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Withdrawal extends ethereum.Event {
  get params(): Withdrawal__Params {
    return new Withdrawal__Params(this);
  }
}

export class Withdrawal__Params {
  _event: Withdrawal;

  constructor(event: Withdrawal) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OlympusTreasury__indexInRegistryResult {
  value0: boolean;
  value1: BigInt;

  constructor(value0: boolean, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class OlympusTreasury__permissionQueueResult {
  value0: i32;
  value1: Address;
  value2: Address;
  value3: BigInt;
  value4: boolean;
  value5: boolean;

  constructor(
    value0: i32,
    value1: Address,
    value2: Address,
    value3: BigInt,
    value4: boolean,
    value5: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    return map;
  }
}

export class OlympusTreasury extends ethereum.SmartContract {
  static bind(address: Address): OlympusTreasury {
    return new OlympusTreasury("OlympusTreasury", address);
  }

  OHM(): Address {
    let result = super.call("OHM", "OHM():(address)", []);

    return result[0].toAddress();
  }

  try_OHM(): ethereum.CallResult<Address> {
    let result = super.tryCall("OHM", "OHM():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  authority(): Address {
    let result = super.call("authority", "authority():(address)", []);

    return result[0].toAddress();
  }

  try_authority(): ethereum.CallResult<Address> {
    let result = super.tryCall("authority", "authority():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  baseSupply(): BigInt {
    let result = super.call("baseSupply", "baseSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_baseSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("baseSupply", "baseSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  blocksNeededForQueue(): BigInt {
    let result = super.call(
      "blocksNeededForQueue",
      "blocksNeededForQueue():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_blocksNeededForQueue(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "blocksNeededForQueue",
      "blocksNeededForQueue():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  bondCalculator(param0: Address): Address {
    let result = super.call(
      "bondCalculator",
      "bondCalculator(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toAddress();
  }

  try_bondCalculator(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "bondCalculator",
      "bondCalculator(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  debtLimit(param0: Address): BigInt {
    let result = super.call("debtLimit", "debtLimit(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_debtLimit(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("debtLimit", "debtLimit(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  deposit(_amount: BigInt, _token: Address, _profit: BigInt): BigInt {
    let result = super.call(
      "deposit",
      "deposit(uint256,address,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_profit)
      ]
    );

    return result[0].toBigInt();
  }

  try_deposit(
    _amount: BigInt,
    _token: Address,
    _profit: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "deposit",
      "deposit(uint256,address,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_profit)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  excessReserves(): BigInt {
    let result = super.call("excessReserves", "excessReserves():(uint256)", []);

    return result[0].toBigInt();
  }

  try_excessReserves(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "excessReserves",
      "excessReserves():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  indexInRegistry(
    _address: Address,
    _status: i32
  ): OlympusTreasury__indexInRegistryResult {
    let result = super.call(
      "indexInRegistry",
      "indexInRegistry(address,uint8):(bool,uint256)",
      [
        ethereum.Value.fromAddress(_address),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_status))
      ]
    );

    return new OlympusTreasury__indexInRegistryResult(
      result[0].toBoolean(),
      result[1].toBigInt()
    );
  }

  try_indexInRegistry(
    _address: Address,
    _status: i32
  ): ethereum.CallResult<OlympusTreasury__indexInRegistryResult> {
    let result = super.tryCall(
      "indexInRegistry",
      "indexInRegistry(address,uint8):(bool,uint256)",
      [
        ethereum.Value.fromAddress(_address),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_status))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OlympusTreasury__indexInRegistryResult(
        value[0].toBoolean(),
        value[1].toBigInt()
      )
    );
  }

  initialized(): boolean {
    let result = super.call("initialized", "initialized():(bool)", []);

    return result[0].toBoolean();
  }

  try_initialized(): ethereum.CallResult<boolean> {
    let result = super.tryCall("initialized", "initialized():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  ohmDebt(): BigInt {
    let result = super.call("ohmDebt", "ohmDebt():(uint256)", []);

    return result[0].toBigInt();
  }

  try_ohmDebt(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("ohmDebt", "ohmDebt():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  onChainGovernanceTimelock(): BigInt {
    let result = super.call(
      "onChainGovernanceTimelock",
      "onChainGovernanceTimelock():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_onChainGovernanceTimelock(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "onChainGovernanceTimelock",
      "onChainGovernanceTimelock():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  permissionQueue(param0: BigInt): OlympusTreasury__permissionQueueResult {
    let result = super.call(
      "permissionQueue",
      "permissionQueue(uint256):(uint8,address,address,uint256,bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new OlympusTreasury__permissionQueueResult(
      result[0].toI32(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toBoolean(),
      result[5].toBoolean()
    );
  }

  try_permissionQueue(
    param0: BigInt
  ): ethereum.CallResult<OlympusTreasury__permissionQueueResult> {
    let result = super.tryCall(
      "permissionQueue",
      "permissionQueue(uint256):(uint8,address,address,uint256,bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OlympusTreasury__permissionQueueResult(
        value[0].toI32(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toBoolean(),
        value[5].toBoolean()
      )
    );
  }

  permissions(param0: i32, param1: Address): boolean {
    let result = super.call(
      "permissions",
      "permissions(uint8,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0)),
        ethereum.Value.fromAddress(param1)
      ]
    );

    return result[0].toBoolean();
  }

  try_permissions(param0: i32, param1: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "permissions",
      "permissions(uint8,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0)),
        ethereum.Value.fromAddress(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  registry(param0: i32, param1: BigInt): Address {
    let result = super.call("registry", "registry(uint8,uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0)),
      ethereum.Value.fromUnsignedBigInt(param1)
    ]);

    return result[0].toAddress();
  }

  try_registry(param0: i32, param1: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "registry",
      "registry(uint8,uint256):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0)),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  sOHM(): Address {
    let result = super.call("sOHM", "sOHM():(address)", []);

    return result[0].toAddress();
  }

  try_sOHM(): ethereum.CallResult<Address> {
    let result = super.tryCall("sOHM", "sOHM():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  timelockEnabled(): boolean {
    let result = super.call("timelockEnabled", "timelockEnabled():(bool)", []);

    return result[0].toBoolean();
  }

  try_timelockEnabled(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "timelockEnabled",
      "timelockEnabled():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  tokenValue(_token: Address, _amount: BigInt): BigInt {
    let result = super.call(
      "tokenValue",
      "tokenValue(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );

    return result[0].toBigInt();
  }

  try_tokenValue(
    _token: Address,
    _amount: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenValue",
      "tokenValue(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalDebt(): BigInt {
    let result = super.call("totalDebt", "totalDebt():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalDebt(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalDebt", "totalDebt():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalReserves(): BigInt {
    let result = super.call("totalReserves", "totalReserves():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalReserves(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalReserves",
      "totalReserves():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _ohm(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _timelock(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _authority(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AuditReservesCall extends ethereum.Call {
  get inputs(): AuditReservesCall__Inputs {
    return new AuditReservesCall__Inputs(this);
  }

  get outputs(): AuditReservesCall__Outputs {
    return new AuditReservesCall__Outputs(this);
  }
}

export class AuditReservesCall__Inputs {
  _call: AuditReservesCall;

  constructor(call: AuditReservesCall) {
    this._call = call;
  }
}

export class AuditReservesCall__Outputs {
  _call: AuditReservesCall;

  constructor(call: AuditReservesCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _profit(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get send_(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class DisableCall extends ethereum.Call {
  get inputs(): DisableCall__Inputs {
    return new DisableCall__Inputs(this);
  }

  get outputs(): DisableCall__Outputs {
    return new DisableCall__Outputs(this);
  }
}

export class DisableCall__Inputs {
  _call: DisableCall;

  constructor(call: DisableCall) {
    this._call = call;
  }

  get _status(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _toDisable(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class DisableCall__Outputs {
  _call: DisableCall;

  constructor(call: DisableCall) {
    this._call = call;
  }
}

export class DisableTimelockCall extends ethereum.Call {
  get inputs(): DisableTimelockCall__Inputs {
    return new DisableTimelockCall__Inputs(this);
  }

  get outputs(): DisableTimelockCall__Outputs {
    return new DisableTimelockCall__Outputs(this);
  }
}

export class DisableTimelockCall__Inputs {
  _call: DisableTimelockCall;

  constructor(call: DisableTimelockCall) {
    this._call = call;
  }
}

export class DisableTimelockCall__Outputs {
  _call: DisableTimelockCall;

  constructor(call: DisableTimelockCall) {
    this._call = call;
  }
}

export class EnableCall extends ethereum.Call {
  get inputs(): EnableCall__Inputs {
    return new EnableCall__Inputs(this);
  }

  get outputs(): EnableCall__Outputs {
    return new EnableCall__Outputs(this);
  }
}

export class EnableCall__Inputs {
  _call: EnableCall;

  constructor(call: EnableCall) {
    this._call = call;
  }

  get _status(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _address(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _calculator(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class EnableCall__Outputs {
  _call: EnableCall;

  constructor(call: EnableCall) {
    this._call = call;
  }
}

export class ExecuteCall extends ethereum.Call {
  get inputs(): ExecuteCall__Inputs {
    return new ExecuteCall__Inputs(this);
  }

  get outputs(): ExecuteCall__Outputs {
    return new ExecuteCall__Outputs(this);
  }
}

export class ExecuteCall__Inputs {
  _call: ExecuteCall;

  constructor(call: ExecuteCall) {
    this._call = call;
  }

  get _index(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ExecuteCall__Outputs {
  _call: ExecuteCall;

  constructor(call: ExecuteCall) {
    this._call = call;
  }
}

export class IncurDebtCall extends ethereum.Call {
  get inputs(): IncurDebtCall__Inputs {
    return new IncurDebtCall__Inputs(this);
  }

  get outputs(): IncurDebtCall__Outputs {
    return new IncurDebtCall__Outputs(this);
  }
}

export class IncurDebtCall__Inputs {
  _call: IncurDebtCall;

  constructor(call: IncurDebtCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class IncurDebtCall__Outputs {
  _call: IncurDebtCall;

  constructor(call: IncurDebtCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class ManageCall extends ethereum.Call {
  get inputs(): ManageCall__Inputs {
    return new ManageCall__Inputs(this);
  }

  get outputs(): ManageCall__Outputs {
    return new ManageCall__Outputs(this);
  }
}

export class ManageCall__Inputs {
  _call: ManageCall;

  constructor(call: ManageCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ManageCall__Outputs {
  _call: ManageCall;

  constructor(call: ManageCall) {
    this._call = call;
  }
}

export class MintCall extends ethereum.Call {
  get inputs(): MintCall__Inputs {
    return new MintCall__Inputs(this);
  }

  get outputs(): MintCall__Outputs {
    return new MintCall__Outputs(this);
  }
}

export class MintCall__Inputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get _recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MintCall__Outputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }
}

export class NullifyCall extends ethereum.Call {
  get inputs(): NullifyCall__Inputs {
    return new NullifyCall__Inputs(this);
  }

  get outputs(): NullifyCall__Outputs {
    return new NullifyCall__Outputs(this);
  }
}

export class NullifyCall__Inputs {
  _call: NullifyCall;

  constructor(call: NullifyCall) {
    this._call = call;
  }

  get _index(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class NullifyCall__Outputs {
  _call: NullifyCall;

  constructor(call: NullifyCall) {
    this._call = call;
  }
}

export class QueueTimelockCall extends ethereum.Call {
  get inputs(): QueueTimelockCall__Inputs {
    return new QueueTimelockCall__Inputs(this);
  }

  get outputs(): QueueTimelockCall__Outputs {
    return new QueueTimelockCall__Outputs(this);
  }
}

export class QueueTimelockCall__Inputs {
  _call: QueueTimelockCall;

  constructor(call: QueueTimelockCall) {
    this._call = call;
  }

  get _status(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _address(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _calculator(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class QueueTimelockCall__Outputs {
  _call: QueueTimelockCall;

  constructor(call: QueueTimelockCall) {
    this._call = call;
  }
}

export class RepayDebtWithOHMCall extends ethereum.Call {
  get inputs(): RepayDebtWithOHMCall__Inputs {
    return new RepayDebtWithOHMCall__Inputs(this);
  }

  get outputs(): RepayDebtWithOHMCall__Outputs {
    return new RepayDebtWithOHMCall__Outputs(this);
  }
}

export class RepayDebtWithOHMCall__Inputs {
  _call: RepayDebtWithOHMCall;

  constructor(call: RepayDebtWithOHMCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RepayDebtWithOHMCall__Outputs {
  _call: RepayDebtWithOHMCall;

  constructor(call: RepayDebtWithOHMCall) {
    this._call = call;
  }
}

export class RepayDebtWithReserveCall extends ethereum.Call {
  get inputs(): RepayDebtWithReserveCall__Inputs {
    return new RepayDebtWithReserveCall__Inputs(this);
  }

  get outputs(): RepayDebtWithReserveCall__Outputs {
    return new RepayDebtWithReserveCall__Outputs(this);
  }
}

export class RepayDebtWithReserveCall__Inputs {
  _call: RepayDebtWithReserveCall;

  constructor(call: RepayDebtWithReserveCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RepayDebtWithReserveCall__Outputs {
  _call: RepayDebtWithReserveCall;

  constructor(call: RepayDebtWithReserveCall) {
    this._call = call;
  }
}

export class SetAuthorityCall extends ethereum.Call {
  get inputs(): SetAuthorityCall__Inputs {
    return new SetAuthorityCall__Inputs(this);
  }

  get outputs(): SetAuthorityCall__Outputs {
    return new SetAuthorityCall__Outputs(this);
  }
}

export class SetAuthorityCall__Inputs {
  _call: SetAuthorityCall;

  constructor(call: SetAuthorityCall) {
    this._call = call;
  }

  get _newAuthority(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAuthorityCall__Outputs {
  _call: SetAuthorityCall;

  constructor(call: SetAuthorityCall) {
    this._call = call;
  }
}

export class SetDebtLimitCall extends ethereum.Call {
  get inputs(): SetDebtLimitCall__Inputs {
    return new SetDebtLimitCall__Inputs(this);
  }

  get outputs(): SetDebtLimitCall__Outputs {
    return new SetDebtLimitCall__Outputs(this);
  }
}

export class SetDebtLimitCall__Inputs {
  _call: SetDebtLimitCall;

  constructor(call: SetDebtLimitCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _limit(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetDebtLimitCall__Outputs {
  _call: SetDebtLimitCall;

  constructor(call: SetDebtLimitCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
